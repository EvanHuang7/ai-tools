# The images with same "latest" tag generated by this CI workflow
# are used by the Docker containers running in GCP VM
name: image-ci-docker-vm

# Set up the trigger of workflow
on:
  push:
    # Code change within specified "paths" is pushed to main branch

    # ⚠️ Warning: Comment out this code block to disable CI workflow for app development
    # branches:
    #   - "main"

    # Or publish a release tag matches this format, such as "0.0.1"
    tags:
      - "[0-9]*.[0-9]*.[0-9]*"
    paths:
      # Only rebuild images when thoese folder files
      # (application code and Dockerfiles) are changed to avoid
      # the workflow triggered when changing unrelated files.
      - "frontend/**/*"
      - "go-backend/**/*"
      - "node-backend/**/*"
      - "python-backend/**/*"

jobs:
  # build tag and push all container images
  build-and-push-image:
    runs-on: ubuntu-latest
    # Matrix strategy allow 4 services to be built for container images
    # in parallel in 4 pipelines all at once.
    # "strategy.matrix" runs the same steps 4 times in parallel,
    # once for each value in matrix.path.
    strategy:
      matrix:
        path:
          - frontend
          - go-backend
          - node-backend
          - python-backend

    steps:
      # Clone the repo, so Git workflow have access to the codebase.
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      # Allows Docker Buildx to emulate different CPU architectures
      # (e.g. build ARM images on x86 machines).
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        # Make sure set up the secrets for them first in Git.
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # NOTE: We can save and restore the docker cache across GitHub action
      # workflow runs to speed up the build time. But we did not do it here.
      # Build and push images to Docker Hub.
      - name: Build Image
        env:
          IMAGE_TAG: developing
        working-directory: ${{ matrix.path }}
        run: |
          task build-container-image-multi-arch IMAGE_TAG=${IMAGE_TAG}
