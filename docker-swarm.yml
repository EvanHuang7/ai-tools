version: "3.7"

services:
  frontend:
    image: evanhuang7/ai-tools-frontend:developing
    deploy:
      mode: replicated
      replicas: 1
      # The rolling update config
      update_config:
        # It allow swarm start the new container before terminating
        # the old container
        order: start-first
    networks:
      - ai-tools
    # Prevents issues in long-running apps like Node.js, Python servers.
    init: true
    # "host_port (the port on host machine or VM):container_port".
    # "published port (the port on host machine or a VM):target port (inside the container)"
    # Swarm services expose ports on all nodes/VMs via the swarm routing mesh.

    # NOTE: Expose container’s port 8080 on the host’s port 8080 if
    # we DO use a Nginx to serve SSL certifcate in VM.
    # Otherwise, expose on the host’s default HTTP port 80.
    ports:
      - 8080:8080

    # We don't sepecify a restart_policy, so swarm would use default restart_policy

    healthcheck:
      # We can use "curl" in container because it is installed
      # in nginx base image when building frontend image.
      # We set the health check in "nginx.conf" file of frontend.
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s # Run healthcheck every 30 seconds
      timeout: 5s # Fail if no response within 5 seconds
      retries: 3
      start_period: 10s # Wait 10 seconds after start before checking health
  node-backend:
    image: evanhuang7/ai-tools-node-backend:developing
    # Backend app container doesn't need to write to any location (like /tmp)
    # because not volumes are mounted.
    read_only: true
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
    networks:
      - ai-tools

    # We don't publish ports for all backend services, which only allows
    # frontend service to access all backend services

    init: true
    environment:
      - DATABASE_URL_FILE=/run/secrets/supabase-postgres-database-url
    # If service declares the secret, the raw bytes secret kept within the Swarm manager nodes will be available
    # inside the container as a file at: "/run/secrets/secret-name"
    secrets:
      - supabase-postgres-database-url
    healthcheck:
      # Use the custom "healthcheck.js" file to test container
      # health because "curl" is not installed in node20 base image
      test: ["CMD", "node", "/usr/src/app/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  go-backend:
    image: evanhuang7/ai-tools-go-backend:developing
    read_only: true
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
    networks:
      - ai-tools
    init: true
    environment:
      - DATABASE_URL_FILE=/run/secrets/neon-postgres-database-url
      - GOOGLE_API_KEY_FILE=/run/secrets/google-api-key
    secrets:
      - neon-postgres-database-url
      - google-api-key
    healthcheck:
      # Use the custom "healthcheck.go" file to test container
      # health because "curl" is not installed in base image of ko
      test: ["CMD", "/healthcheck"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  python-backend:
    image: evanhuang7/ai-tools-python-backend:developing
    read_only: true
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        order: start-first
    networks:
      - ai-tools
    init: true
    environment:
      - REDIS_URL_FILE=/run/secrets/redis-url
      - MONGODB_URL_FILE=/run/secrets/mongodb-url
      - IMAGEKIT_PRIVATE_KEY_FILE=/run/secrets/imagekit-private-key
    secrets:
      - redis-url
      - mongodb-url
      - imagekit-private-key
    healthcheck:
      # Use the custom "healthcheck.py" file to test container
      # health because "curl" is not installed in python3.12 base image
      test: ["CMD", "python", "/app/healthcheck/healthcheck.py"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  # The default network driver for Swarm Services is "overlay"
  ai-tools:

secrets:
  supabase-postgres-database-url:
    # We create this secret by ourselves and Docker Swarm doesn't need
    # to manage it as part of this stack
    external: true
  neon-postgres-database-url:
    external: true
  redis-url:
    external: true
  mongodb-url:
    external: true
