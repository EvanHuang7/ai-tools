version: "3.7"

services:
  frontend:
    image: evanhuang7/ai-tools-frontend:developing
    networks:
      - ai-tools
    # Prevents issues in long-running apps like Node.js, Python servers.
    init: true

    # "host_port (the port on host machine or a VM):container_port".
    # "published port (the port on host machine or a VM):target port (inside the container)"

    # NOTE: Expose container’s port 8080 on the host’s port 8080 if
    # we DO use a Nginx to serve SSL certifcate in VM.
    # Otherwise, expose on the host’s default HTTP port 80.
    ports:
      - 8080:8080
    restart: unless-stopped
    healthcheck:
      # We can use "curl" in container because it is installed
      # in nginx base image when building frontend image.
      # We set the health check in "nginx.conf" file of frontend.
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s # Run healthcheck every 30 seconds
      timeout: 5s # Fail if no response within 5 seconds
      retries: 3
      start_period: 10s # Wait 10 seconds after start before checking health
  node-backend:
    image: evanhuang7/ai-tools-node-backend:developing
    # Backend app container doesn't need to write to any location (like /tmp)
    # because not volumes are mounted.
    read_only: true
    networks:
      - ai-tools
    init: true

    # We don't publish ports for all backend services, which only allows
    # frontend service to access all backend services

    # TODO: Remember to remove it after usage to aviod store
    # secrets on Git
    environment:
      - DATABASE_URL=postgresql://postgres.otuiikhbcyitlgoknrii:Ab12345678!@aws-0-ca-central-1.pooler.supabase.com:6543/postgres
    restart: unless-stopped
    healthcheck:
      # Use the custom "healthcheck.js" file to test container
      # health because "curl" is not installed in node20 base image
      test: ["CMD", "node", "/usr/src/app/healthcheck.js"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  go-backend:
    image: evanhuang7/ai-tools-go-backend:developing
    read_only: true
    networks:
      - ai-tools
    init: true
    # TODO: Remember to remove it after usage to aviod store
    # secrets on Git
    environment:
      - DATABASE_URL=postgresql://neondb_owner:npg_chuXl7Qo2CGv@ep-rapid-rain-a4ztbwzh-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require
      - GOOGLE_API_KEY=AIzaSyANoF0xsQ1va3C9bOhnLhjM3gQaoxuDL7s
    restart: unless-stopped
    healthcheck:
      # Use the custom "healthcheck.go" file to test container
      # health because "curl" is not installed in base image of ko
      test: ["CMD", "/healthcheck"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  python-backend:
    image: evanhuang7/ai-tools-python-backend:developing
    read_only: true
    networks:
      - ai-tools
    init: true
    # TODO: Remember to remove it after usage to aviod store
    # secrets on Git
    environment:
      - REDIS_URL=rediss://default:AaXyAAIjcDFkYWFhNzEzMmE3MmU0MzkyOWQ3NTA4ZTllMmI5Mjk5ZnAxMA@enough-lobster-42482.upstash.io:6379
      - MONGODB_URL=mongodb+srv://mrxiaohui204:eZG55LdPqpWb62yO@cluster0.bjhjsnn.mongodb.net/ai_tools_db?retryWrites=true&w=majority&appName=Cluster0
      - IMAGEKIT_PRIVATE_KEY=private_4navyancGH3U+JHgU7oSGp+XL0A=
      - GRPC_HOST=go-backend
    restart: unless-stopped
    healthcheck:
      # Use the custom "healthcheck.py" file to test container
      # health because "curl" is not installed in python3.12 base image
      test: ["CMD", "python", "/app/healthcheck/healthcheck.py"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  # The default network driver for Docker Compose is "bridge"
  ai-tools:
