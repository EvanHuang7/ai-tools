version: "3"

includes:
  ######### Build and push app container image #########
  go-backend:
    taskfile: ./go-backend/Taskfile.yaml
    dir: ./go-backend
  node-backend:
    taskfile: ./node-backend/Taskfile.yaml
    dir: ./node-backend
  python-backend:
    taskfile: ./python-backend/Taskfile.yaml
    dir: ./python-backend
  frontend:
    taskfile: ./frontend/Taskfile.yaml
    dir: ./frontend
  ######### Deploy Traefik ingress controller #########
  common:
    taskfile: ./common-k8s-resource-defins/Taskfile.yaml
    dir: ./common-k8s-resource-defins

env:
  CLUSTER_NAME: devops-directive-kubernetes-course
  GCP_REGION: us-central1
  GCP_ZONE: us-central1-a
  # Set default gum style options
  BORDER: double
  BORDER_FOREGROUND: "212"
  PADDING: "1 1"
  MARGIN: "1 1"

tasks:
  ######### Create K8s cluster in GCP #########
  gcp:01-init-cli:
    cmds:
      - gcloud init
    desc: "Authenticate and configure the gcloud CLI"

  gcp:02-enable-apis:
    cmds:
      - |
        gcloud services enable \
          compute.googleapis.com \
          container.googleapis.com \
          cloudresourcemanager.googleapis.com \
          iam.googleapis.com \
          secretmanager.googleapis.com \
          servicemanagement.googleapis.com \
          serviceusage.googleapis.com
    desc: "Enable necessary APIs"

  gcp:03-set-region-and-zone:
    cmds:
      - gcloud config set compute/region ${GCP_REGION}
      - gcloud config set compute/zone ${GCP_ZONE}
    desc: "Set default region and zone"

  gcp:04-create-vpc:
    cmds:
      - gcloud compute networks create ${CLUSTER_NAME} --subnet-mode=custom
    desc: "Create VPC"

  gcp:05-create-subnet:
    cmds:
      - |
        gcloud compute networks subnets create subnet-1 \
          --network=${CLUSTER_NAME} \
          --region=${GCP_REGION} \
          --range=10.0.0.0/20
    desc: "Create subnet"

  gcp:06-create-cluster:
    desc: "Create GKE cluster"
    vars:
      GCP_PROJECT_ID: kubernetes-course-424917
    cmds:
      - |
        gcloud container clusters create ${CLUSTER_NAME} \
          --zone ${GCP_ZONE} \
          --network ${CLUSTER_NAME} \
          --subnetwork subnet-1 \
          --machine-type e2-standard-2 \
          --num-nodes 2 \
          --gateway-api=standard \
          --workload-pool={{.GCP_PROJECT_ID}}.svc.id.goog

  gcp:07-create-all:
    cmds:
      - task: gcp:02-enable-apis
      - task: gcp:03-set-region-and-zone
      - task: gcp:04-create-vpc
      - task: gcp:05-create-subnet
      - task: gcp:06-create-cluster
    desc: Create the GCP network, subnet, firewall rules, and cluster in sequence

  gcp:09-clean-up:
    cmds:
      - gcloud container clusters delete ${CLUSTER_NAME} --zone ${GCP_ZONE} --quiet
      - gcloud compute networks subnets delete subnet-1 --region=${GCP_REGION} --quiet
      - gcloud compute networks delete ${CLUSTER_NAME} --quiet
    desc: Delete the GCP network, subnet, firewall rules, and cluster in reverse sequence

  gcp:08-connect-to-cluster:
    cmds:
      - gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${GCP_ZONE}
    desc: "Connect to the GKE cluster"

  ######### Create Kind K8s Cluster Locally #########
  kind:01-generate-config:
    cmds:
      - REPLACE_WITH_ABSOLUTE_PATH=${PWD} envsubst < kind-config.yaml.TEMPLATE > kind-config.yaml
    desc: "Generate kind config with local absolute paths for PV mounts"

  kind:02-create-cluster:
    cmds:
      - kind create cluster --config kind-config.yaml
    desc: Create a Kubernetes cluster using kind

  # It is used to get an ExternalIP for Load Balancer in Local Kind Cluster
  # Remember to run it in a sepearte terminal
  kind:03-run-cloud-provider-kind:
    desc: "Run sigs.k8s.io/cloud-provider-kind@latest to enable load balancer services with KinD"
    cmds:
      - sudo cloud-provider-kind

  kind:04-delete-cluster:
    cmds:
      - kind delete cluster
    desc: Delete and existing a kind Kubernetes cluster

  ######### Set up Docker buildx #########
  # Set up Docker buildx for building multiple architecture images
  bootstrap-buildx-builder:
    desc: Bootstrap the builder
    cmds:
      - docker buildx create --name mybuilder --driver docker-container --driver-opt network=host --use
      - docker buildx inspect mybuilder --bootstrap
      - docker buildx use mybuilder

  ######### Run apps in K8s cluster #########
  # Deploy go backend app in cluster
  go-k8s-resource-defins:apply:
    desc: "Apply kubernetes resource manifests for go backend application"
    cmds:
      - "kubectl apply -f ./go-backend/go-k8s-resource-defins"

  # Deploy node backend app in cluster
  node-k8s-resource-defins:apply:
    desc: "Apply kubernetes resource manifests for node backend application"
    cmds:
      - "kubectl apply -f ./node-backend/node-k8s-resource-defins"

  # Deploy python backend app in cluster
  python-k8s-resource-defins:apply:
    desc: "Apply kubernetes resource manifests for python backend application"
    cmds:
      - "kubectl apply -f ./python-backend/python-k8s-resource-defins"

  # Deploy frontend app in cluster
  frontend-k8s-resource-defins:apply:
    desc: "Apply kubernetes resource manifests for frontend application"
    cmds:
      - "kubectl apply -f ./frontend/frontend-k8s-resource-defins"

  ######### Start Tilt locally #########
  tilt-up:
    desc: "Start the applications using the top level tilt file"
    cmds:
      - tilt up

  ######### Docker compose #########
  compose-up:
    desc: "Run all app containers"
    cmds:
      - docker compose -f Docker-compose.yml up

  # Runs containers in the background with -d flag
  compose-up-d:
    desc: "Run all app containers in background"
    cmds:
      - docker compose -f Docker-compose.yml up -d

  compose-down:
    desc: "Turn off all app containers"
    cmds:
      - docker compose -f Docker-compose.yml down
